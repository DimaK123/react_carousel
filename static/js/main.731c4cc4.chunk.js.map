{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","move","moveAction","event","direction","currentTarget","innerText","props","images","step","frameSize","itemWidth","infinite","endOfCarousel","length","setState","scroll","this","animationDuration","className","style","width","transform","transition","map","img","id","minWidth","height","src","alt","objectFit","classNames","disabled","type","onClick","React","Component","App","textAlign","action","value","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.731c4cc4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ninterface State {\n  move: number\n}\n\ntype Action = 'Prev' | 'Next';\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    move: 0,\n  };\n\n  moveAction = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const direction: Action = event.currentTarget.innerText as Action;\n\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const endOfCarousel = itemWidth * images.length - frameSize * itemWidth;\n\n    if (direction === 'Prev') {\n      this.setState(({ move }) => {\n        const scroll = move - step * itemWidth;\n\n        switch (true) {\n          case (move === 0 && infinite):\n            return { move: endOfCarousel };\n\n          case (scroll <= 0):\n            return ({ move: 0 });\n\n          default:\n            return ({ move: scroll });\n        }\n      });\n    }\n\n    if (direction === 'Next') {\n      this.setState(({ move }) => {\n        const scroll = move + step * itemWidth;\n\n        switch (true) {\n          case (move === endOfCarousel && !infinite):\n            return null;\n\n          case (move === endOfCarousel && infinite):\n            return ({ move: 0 });\n\n          case (scroll >= endOfCarousel):\n            return ({ move: endOfCarousel });\n\n          default:\n            return ({ move: scroll });\n        }\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { move } = this.state;\n\n    const endOfCarousel = itemWidth * images.length - frameSize * itemWidth;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translate(-${move}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {images.map((img, id) => (\n            <li\n              className=\"Carousel__list-item\"\n              key={`${id + 1}`}\n              style={{\n                minWidth: itemWidth,\n                height: itemWidth,\n              }}\n            >\n              <img\n                src={img}\n                alt={`${id + 1}`}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'cover',\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className={classNames(\n              'Carousel__buttons-left',\n              {\n                'Carousel__buttons-left_disabled': !!(move === 0 && !infinite),\n              },\n            )}\n            disabled={!!(move === 0 && !infinite)}\n            type=\"button\"\n            onClick={this.moveAction}\n          >\n            Prev\n          </button>\n          <button\n            className={classNames(\n              'Carousel__buttons-right',\n              {\n                'Carousel__buttons-right_disabled':\n                !!(move === endOfCarousel && !infinite),\n              },\n            )}\n            disabled={!!(move === endOfCarousel && !infinite)}\n            type=\"button\"\n            onClick={this.moveAction}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport interface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          style={{ textAlign: 'center' }}\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form\n          action=\"post\"\n          className=\"App__Form\"\n          style={{ width: '390px' }}\n        >\n          <label className=\"App__Form-input\">\n            Item Width\n            <input\n              type=\"number\"\n              value={itemWidth}\n              onChange={(event) => {\n                this.setState({\n                  itemWidth: +(event.currentTarget.value),\n                });\n              }}\n            />\n          </label>\n          <label className=\"App__Form-input\">\n            Frame Size\n            <input\n              type=\"number\"\n              value={frameSize}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +(event.currentTarget.value),\n                });\n              }}\n            />\n          </label>\n          <label className=\"App__Form-input\">\n            Step\n            <input\n              type=\"number\"\n              value={step}\n              onChange={(event) => {\n                this.setState({\n                  step: +(event.currentTarget.value),\n                });\n              }}\n            />\n          </label>\n          <label className=\"App__Form-input\">\n            Animation Duration\n            <input\n              type=\"number\"\n              value={animationDuration}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +(event.currentTarget.value),\n                });\n              }}\n            />\n          </label>\n          <label className=\"App__Form-input\">\n            Infinite\n            <input\n              type=\"checkbox\"\n              onChange={() => {\n                this.setState({ infinite: !infinite });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}